# -*- coding: utf-8 -*-
"""WebApplication.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F3cmerS5Pyhz9Zctj981kmYTH6zj_3pc
"""


import nltk
import re
from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer 
nltk.download('wordnet')
nltk.download('stopwords')
lemmatizer = WordNetLemmatizer()
stop_words = set(stopwords.words('english')) 




def preprocess(text):    
  stop_words = set(stopwords.words('english')) 
  #word_tokens = word_tokenize(text)
  word_tokens= re.split(' |,|-|\|*/|',text)
  txt= [w for w in word_tokens if not w in stop_words]
  ls=[]
  for w in txt:
    r=re.sub(r"'s",'',w)
    r=re.sub('[^a-zA-Z]+', '', r)
    if(len(r)>2):
      ls.append(r)
  ls=[lemmatizer.lemmatize(w) for w in ls if len(w)<10] 
  ls=' '.join(ls)
  ls=re.sub(' +', ' ', ls)
  ls=ls.lower()
  print(ls)
  return ls

import logging
import gensim
import praw
from praw.models import MoreComments
from zipfile import ZipFile 
import flask
import pickle
import pandas as pd
import tensorflow as tf 
from sklearn.feature_extraction.text import CountVectorizer

cv = CountVectorizer(decode_error="replace",vocabulary=pickle.load(open("vectorizer.pkl", "rb")))
reddit = praw.Reddit(client_id='iCFN0kQ5WEwTaA', client_secret='d2onHobYjKWOc95Gx5Z_X1hZz9o', user_agent='Reddit Web Scraping')

def prediction(url):
  submission = reddit.submission(url = url)
  dat= str(submission.title)
  dat= [preprocess(dat)]
  clf= pickle.load(open("NB (1).pkl", "rb")) 

  vect= cv.transform(dat).toarray()
  pred=clf.predict(vect)
  print(pred)
  return pred


# Initialise the Flask app
app = flask.Flask(__name__, template_folder='templates')
@app.route('/', methods=['GET', 'POST'])
def main():
  if flask.request.method == 'GET':
    return(flask.render_template('main.html'))
    
  if flask.request.method == 'POST':
    text = flask.request.form['url']
    flair = prediction(str(text))
    return flask.render_template('main.html', original_input={'url':str(text)}, result=flair,)

